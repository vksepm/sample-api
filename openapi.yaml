openapi: 3.0.0
info:
  title: Sample API
  description: This is a sample API for managing pets.
  version: 1.0.0
  contact:
    name: API Support
    url: 'http://www.example.com/support'
    email: support@example.com
servers:
  - url: 'http://api.example.com/v1'
    description: Main (production) server
  - url: 'http://staging-api.example.com'
    description: Staging server
security:
  - api_key: []
tags:
  - name: Pets
    description: Operations related to pets.
paths:
  /pets:
    get:
      tags:
        - Pets
      summary: List all pets
      description: Returns a list containing all pets. The list supports paging.
      operationId: listPets
      responses:
        '200':
          description: An array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"
                minItems: 1
                maxItems: 100
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example1:
                  $ref: "#/components/examples/Error"
  '/pets/{petId}':
    get:
      tags:
        - Pets
      summary: Get a pet by ID
      description: Returns a specific pet by its unique ID.
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          required: true
          description: The ID of the pet to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A pet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              examples:
                example1:
                  $ref: "#/components/examples/Pet"
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example1:
                  $ref: "#/components/examples/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example1:
                  $ref: "#/components/examples/Error"
components:
  schemas:
    Pet:
      $ref: ./components/schemas/pet.yaml
    Error:
      $ref: ./components/schemas/error.yaml
  securitySchemes:
    api_key:
      $ref: ./components/security/api_key.yaml
  examples:
    Pet:
      $ref: ./components/schemas/pet.yaml
    Error:
      $ref: ./components/schemas/error.yaml
